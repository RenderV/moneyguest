'use client'
import React, { useEffect, useState } from "react"
import {TitledCard} from "./card"
import styles from "./velocimeter.module.css"

export default function Velocimeter({ percent = 0, title }: { percent: number, title: string }) {

    const [isRotated, setRotated] = useState(false)

    const offset = -90
    const rotated: React.CSSProperties = {
        transform: `rotate(${offset + percent * 180}deg)`,
    }

    useEffect(() => {
        setRotated(true)
    }, [])

    return (
        <TitledCard title={title}>
            <svg width="100%" height="100%" viewBox="0 0 283 199" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g opacity="0.4" filter="url(#filter0_d_0_1)">
                    <circle cx="142.449" cy="132.434" r="36.5587" fill="white" />
                </g>
                <path style={isRotated ? rotated : {}} className={styles.rotation} d="M156.329 148.561C163.911 140.979 163.911 128.439 156.329 120.857C148.733 113.261 136.207 113.275 128.611 120.871C121.029 128.453 121.029 140.965 128.625 148.561C136.207 156.143 148.747 156.143 156.329 148.561ZM154.534 146.766C147.85 153.45 137.091 153.436 130.42 146.766C123.736 140.081 123.722 129.323 130.393 122.652C137.077 115.968 147.85 115.968 154.548 122.638C161.218 129.309 161.218 140.081 154.534 146.766ZM135.323 127.583C136.014 126.892 136.028 125.746 135.337 125.055C134.633 124.351 133.486 124.365 132.796 125.055C132.105 125.746 132.105 126.878 132.81 127.583C133.5 128.273 134.633 128.273 135.323 127.583ZM142.325 138.562C144.342 138.534 145.474 136.932 145.156 134.875L143.251 121.423C143.085 120.373 141.87 120.401 141.69 121.409L139.439 134.875C139.094 136.905 140.268 138.548 142.325 138.562ZM131.94 136.021C132.63 135.33 132.616 134.184 131.926 133.494C131.235 132.803 130.103 132.803 129.412 133.494C128.722 134.184 128.708 135.33 129.398 136.021C130.089 136.711 131.249 136.711 131.94 136.021ZM135.365 144.363C136.055 143.672 136.041 142.526 135.351 141.835C134.66 141.145 133.528 141.145 132.837 141.835C132.147 142.526 132.133 143.672 132.824 144.363C133.514 145.053 134.674 145.053 135.365 144.363ZM152.117 127.61C152.808 126.92 152.808 125.76 152.117 125.069C151.427 124.379 150.28 124.392 149.59 125.083C148.899 125.773 148.899 126.906 149.59 127.596C150.28 128.287 151.427 128.301 152.117 127.61ZM143.72 147.774C144.425 147.069 144.425 145.937 143.734 145.246C143.03 144.542 141.897 144.542 141.193 145.246C140.502 145.937 140.488 147.083 141.193 147.788C141.883 148.478 143.03 148.464 143.72 147.774ZM155.528 135.966C156.219 135.275 156.219 134.143 155.528 133.452C154.824 132.748 153.691 132.748 153.001 133.438C152.297 134.143 152.297 135.275 153.001 135.98C153.691 136.67 154.824 136.67 155.528 135.966Z" fill="#0ACF83" />
                <path d="M199.368 132.441C199.368 117.343 193.371 102.864 182.695 92.1877C172.019 81.5118 157.539 75.5142 142.441 75.5142C127.343 75.5142 112.864 81.5118 102.188 92.1877C91.5118 102.864 85.5142 117.343 85.5142 132.441" stroke="url(#paint0_linear_0_1)" strokeLinecap="round" strokeDasharray="0 1 10 0 1 10" />
                <mask id="mask0_0_1" style={{ maskType: "alpha" }} maskUnits="userSpaceOnUse" x="0" y="0" width="283" height="132">
                    <rect width="283" height="132" fill="#D9D9D9" />
                </mask>
                <g mask="url(#mask0_0_1)">
                    <g className={styles.rotation} style={isRotated ? rotated : {}}>
                        <path d="M142 252C75.7258 252 22 198.274 22 132C22 65.7259 75.7258 12 142 12C208.274 12 262 65.7259 262 132C262 198.274 208.274 252 142 252ZM142 72C108.863 72 82 98.863 82 132C82 165.137 108.863 192 142 192C175.137 192 202 165.137 202 132C202 98.863 175.137 72 142 72Z" fill="#0ACF83" />
                        <path d="M142 252C157.759 252 173.363 248.896 187.922 242.866C202.481 236.835 215.71 227.996 226.853 216.853C237.996 205.71 246.835 192.481 252.866 177.922C258.896 163.363 262 147.759 262 132C262 116.241 258.896 100.637 252.866 86.078C246.835 71.519 237.996 58.2902 226.853 47.1472C215.71 36.0042 202.481 27.165 187.922 21.1345C173.363 15.1039 157.759 12 142 12L142 72C149.879 72 157.681 73.552 164.961 76.5673C172.241 79.5826 178.855 84.0021 184.426 89.5736C189.998 95.1452 194.417 101.76 197.433 109.039C200.448 116.319 202 124.121 202 132C202 139.879 200.448 147.682 197.433 154.961C194.418 162.241 189.998 168.855 184.426 174.426C178.855 179.998 172.241 184.418 164.961 187.433C157.681 190.448 149.879 192 142 192V252Z" fill="#F75A68" />
                        <path d="M142 53.0001L142 27" stroke="white" strokeWidth="5" />
                    </g>
                </g>
                <defs>
                    <filter id="filter0_d_0_1" x="80.8901" y="75.8747" width="123.118" height="123.118" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
                        <feFlood floodOpacity="0" result="BackgroundImageFix" />
                        <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                        <feOffset dy="5" />
                        <feGaussianBlur stdDeviation="12.5" />
                        <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0" />
                        <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_0_1" />
                        <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_0_1" result="shape" />
                    </filter>
                    <linearGradient id="paint0_linear_0_1" x1="142.441" y1="75.5142" x2="142.441" y2="132.441" gradientUnits="userSpaceOnUse">
                        <stop stopColor="#FE6C6C" />
                        <stop offset="1" stopColor="#FE464B" />
                    </linearGradient>
                </defs>
            </svg>
        </TitledCard>
    )
}